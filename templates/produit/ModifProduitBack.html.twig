
{% extends 'baseBack.html.twig' %}

{% block title %}Modifier Produit{% endblock %}
{% block current_page %}Produits{% endblock %}
{% block page_title %}Modifier le produit{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        {# Les mêmes styles que pour l'ajout #}
        .is-invalid {
            border-color: #ea2c62 !important;
        }
        .invalid-feedback {
            color: #ea2c62;
            font-size: 0.8rem;
        }
        .was-validated .form-control:valid {
            border-color: #28a745;
        }
        .is-valid {
            border-color: #28a745 !important;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
            padding-right: 2.25rem;
        }
        .form-control:focus:valid {
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
        }
        .form-control[readonly] {
            background-color: #f8f9fa;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const fields = form.querySelectorAll('input:not([readonly]), textarea, select');
            const keepImageCheckbox = document.getElementById('keep_image');
    const imageInput = document.querySelector('[name="produit[imageProduit]"]');
    


    if (keepImageCheckbox && imageInput) {
        // Désactive la validation HTML5 quand la case est cochée
        keepImageCheckbox.addEventListener('change', function() {
            if (this.checked) {
                imageInput.removeAttribute('required');
                imageInput.classList.remove('is-invalid');
                imageInput.classList.add('is-valid');
            } else {
                imageInput.setAttribute('required', 'required');
            }
        });
        
        // Initialisation
        if (keepImageCheckbox.checked) {
            imageInput.removeAttribute('required');
        }
    }

            // Validation en temps réel
            fields.forEach(field => {
                field.addEventListener('input', validateField.bind(null, field));
                field.addEventListener('change', validateField.bind(null, field));
            });

            function validateField(field) {
                if (field.checkValidity()) {
                    field.classList.add('is-valid');
                    field.classList.remove('is-invalid');
                } else {
                    field.classList.add('is-invalid');
                    field.classList.remove('is-valid');
                }
            }
            
            form.addEventListener('submit', function(e) {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    const invalidFields = form.querySelectorAll(':invalid');
                    let errorMessages = [];
                    
                    invalidFields.forEach(field => {
                        if (field.validationMessage && !errorMessages.some(e => e.name === field.name)) {
                            const label = field.labels[0]?.textContent?.trim() || field.getAttribute('name') || 'Champ';
                            errorMessages.push({
                                name: label.replace(':', ''),
                                message: field.validationMessage
                            });
                        }
                    });
                    
                    if (errorMessages.length > 0) {
                        showErrorPopup(errorMessages);
                    }
                }
                
                form.classList.add('was-validated');
            });
            
            function showErrorPopup(errors) {
                let errorHtml = '<ul class="text-start">';
                errors.forEach(error => {
                    errorHtml += `<li><strong>${error.name}:</strong> ${error.message}</li>`;
                });
                errorHtml += '</ul>';
                
                Swal.fire({
                    icon: 'error',
                    title: 'Erreurs dans le formulaire',
                    html: errorHtml,
                    confirmButtonText: 'Je corrige',
                    confirmButtonColor: '#ea2c62'
                });
            }
        });
    </script>

{% endblock %}
    



{% block body %} {% endblock %}

{% block main_content %}
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <h6>Modification du produit</h6>
                </div>
                <div class="card-body px-4 pt-0 pb-2">
                    {{ form_start(form, {
                        'attr': {
                            'class': 'p-3 needs-validation',
                            'novalidate': 'novalidate'
                        }
                    }) }}
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_label(form.nomProduit, 'Nom du produit') }}
                                    {{ form_widget(form.nomProduit, {
                                        'attr': {
                                            'class': 'form-control',
                                            'required': 'required'
                                        }
                                    }) }}
                                    <div class="invalid-feedback">
                                        {{ form_errors(form.nomProduit) }}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-control-label">Référence</label>
                                    <input type="text" 
                                           class="form-control" 
                                           value="{{ produit.refProduit }}" 
                                           readonly
                                           style="background-color: #f8f9fa;">
                                </div>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_label(form.prixProduit, 'Prix (€)') }}
                                    <div class="input-group">
                                        <span class="input-group-text">€</span>
                                        {{ form_widget(form.prixProduit, {
                                            'attr': {
                                                'class': 'form-control',
                                                'min': '0',
                                                'required': 'required'
                                            }
                                        }) }}
                                    </div>
                                    <div class="invalid-feedback">
                                        {{ form_errors(form.prixProduit) }}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_label(form.quantiteProduit, 'Quantité en stock') }}
                                    {{ form_widget(form.quantiteProduit, {
                                        'attr': {
                                            'class': 'form-control',
                                            'min': '0',
                                            'required': 'required'
                                        }
                                    }) }}
                                    <div class="invalid-feedback">
                                        {{ form_errors(form.quantiteProduit) }}
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-12">
                                <div class="form-group">
                                    {{ form_label(form.descriptionProduit, 'Description') }}
                                    {{ form_widget(form.descriptionProduit, {
                                        'attr': {
                                            'class': 'form-control',
                                            'rows': '3',
                                            'required': 'required'
                                        }
                                    }) }}
                                    <div class="invalid-feedback">
                                        {{ form_errors(form.descriptionProduit) }}
                                    </div>
                                </div>
                            </div>
                        </div><div class="row mt-3">
                            <div class="col-12">
                                <div class="form-group">
                                    {{ form_label(form.imageProduit, 'Image du produit') }}
                                    {{ form_widget(form.imageProduit, {
                                        'attr': {
                                            'class': 'form-control',
                                            'accept': 'image/jpeg,image/png,image/gif'
                                        }
                                    }) }}
                                    <div class="invalid-feedback">
                                        {{ form_errors(form.imageProduit) }}
                                    </div>
                                    {% if produit.imageProduit %}
                                        <div class="mt-2">
                                            <img src="{{ asset('uploads/' ~ produit.imageProduit) }}" 
                                                 class="img-thumbnail" 
                                                 style="max-width: 150px;">
                                            <div class="form-check mt-2">
                                                <input class="form-check-input" 
                                                       type="checkbox" 
                                                       id="keep_image" 
                                                       name="keep_image"
                                                       checked>
                                                <label class="form-check-label" for="keep_image">
                                                    Garder l'image actuelle
                                                </label>
                                            </div>
                                            <small class="text-muted d-block">Décochez pour changer l'image</small>
                                        </div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                        </div>
                        <div class="mt-4">
                            <button type="submit" class="btn bg-gradient-primary">
                                <i class="fas fa-save me-2"></i> Mettre à jour
                            </button>
                            <a href="{{ path('app_produit_dashboard') }}" class="btn bg-gradient-secondary">
                                <i class="fas fa-times me-2"></i> Annuler
                            </a>
                        </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}


   
