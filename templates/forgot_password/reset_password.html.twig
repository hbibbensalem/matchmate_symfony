<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Réinitialisation du mot de passe</title>
    <link rel="stylesheet" href="{{ asset('front/bootstrap/css/bootstrap.min.css') }}">
    <link rel="stylesheet" href="{{ asset('front/animatecss/animate.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #10888D;
            --secondary-color: #4e73df;
            --accent-color: #ff7d19;
            --light-bg: #f8f9fe;
        }
        
        body {
            background: url("{{ asset('front/images/p-7-photoroom-1280x723.png') }}") no-repeat center center fixed;
            background-size: cover;
            font-family: 'Inter Tight', sans-serif;
            min-height: 100vh;
            display: flex;
            align-items: center;
            padding: 20px;
        }
        
        .reset-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            max-width: 500px;
            margin: 0 auto;
            transition: all 0.5s ease;
            border: none;
        }
        
        .reset-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }
        
        .card-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            text-align: center;
            padding: 25px;
            border-bottom: none;
        }
        
        .card-header h1 {
            font-weight: 700;
            margin: 0;
            font-size: 1.8rem;
        }
        
        .card-body {
            padding: 30px;
        }
        
        .form-control {
            height: 50px;
            border-radius: 8px;
            border: 1px solid #e0e0e0;
            padding-left: 15px;
            transition: all 0.3s;
        }
        
        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(16, 136, 141, 0.25);
        }
        
        .btn-submit {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            border: none;
            color: white;
            padding: 12px 30px;
            border-radius: 50px;
            font-weight: 600;
            letter-spacing: 0.5px;
            transition: all 0.3s;
            width: 100%;
            height: 50px;
            font-size: 1rem;
            text-transform: uppercase;
        }
        
        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(16, 136, 141, 0.4);
        }
        
        .alert {
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }
        
        .password-strength {
            height: 5px;
            background: #e9ecef;
            border-radius: 5px;
            margin-top: 5px;
            overflow: hidden;
        }
        
        .password-strength-bar {
            height: 100%;
            width: 0;
            transition: width 0.3s, background-color 0.3s;
        }
        
        .password-requirements {
            margin-top: 10px;
            font-size: 0.85rem;
            color: #6c757d;
        }
        
        .password-requirements ul {
            padding-left: 20px;
            margin-bottom: 0;
        }
        
        .password-requirements li {
            margin-bottom: 5px;
        }
        
        .password-requirements li.valid {
            color: var(--primary-color);
        }
        
        .password-requirements li.valid::before {
            content: "✓ ";
        }
        
        .input-group-icon {
            position: relative;
        }
        
        .input-group-icon i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--primary-color);
            z-index: 10;
        }
        
        .input-group-icon input {
            padding-left: 45px;
        }
        
        .toggle-password {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #6c757d;
            z-index: 10;
        }
        
        .toggle-password:hover {
            color: var(--primary-color);
        }
        
        .animation-delay-1 { animation-delay: 0.1s; }
        .animation-delay-2 { animation-delay: 0.2s; }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="reset-card animate__animated animate__fadeInUp">
                    <div class="card-header animate__animated animate__fadeIn">
                        <h1><i class="fas fa-lock me-2"></i> Réinitialiser le mot de passe</h1>
                    </div>
                    <div class="card-body">
                        {% for message in app.flashes('danger') %}
                            <div class="alert alert-danger animate__animated animate__shakeX">{{ message }}</div>
                        {% endfor %}
                        {% for message in app.flashes('success') %}
                            <div class="alert alert-success animate__animated animate__bounceIn">{{ message }}</div>
                        {% endfor %}
                        
                        <form method="post" class="animate__animated animate__fadeIn animation-delay-1">
                            <div class="mb-4 input-group-icon">
                                <i class="fas fa-lock"></i>
                                <input type="password" name="password" id="password" class="form-control" placeholder="Nouveau mot de passe" required>
                                <span class="toggle-password" onclick="togglePassword('password')">
                                    <i class="fas fa-eye"></i>
                                </span>
                                <div class="password-strength">
                                    <div class="password-strength-bar" id="password-strength-bar"></div>
                                </div>
                                <div class="password-requirements">
                                    <ul>
                                        <li id="req-length">8 caractères minimum</li>
                                        <li id="req-uppercase">1 lettre majuscule</li>
                                        <li id="req-lowercase">1 lettre minuscule</li>
                                        <li id="req-number">1 chiffre</li>
                                        <li id="req-special">1 caractère spécial</li>
                                    </ul>
                                </div>
                            </div>
                            
                            <div class="mb-4 input-group-icon">
                                <i class="fas fa-lock"></i>
                                <input type="password" name="confirm_password" id="confirm_password" class="form-control" placeholder="Confirmer le mot de passe" required>
                                <span class="toggle-password" onclick="togglePassword('confirm_password')">
                                    <i class="fas fa-eye"></i>
                                </span>
                                <div class="invalid-feedback" id="password-match-feedback">
                                    Les mots de passe ne correspondent pas
                                </div>
                            </div>
                            
                            <button type="submit" class="btn btn-submit animate__animated animate__fadeIn animation-delay-2">
                                <span class="submit-text">Réinitialiser</span>
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="{{ asset('front/bootstrap/js/bootstrap.bundle.min.js') }}"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animation au chargement
            const elements = document.querySelectorAll('.animate__animated');
            elements.forEach(el => {
                el.style.opacity = '0';
                setTimeout(() => {
                    el.style.opacity = '1';
                }, 100);
            });
            
            // Vérification du mot de passe
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirm_password');
            const strengthBar = document.getElementById('password-strength-bar');
            const requirements = {
                length: document.getElementById('req-length'),
                uppercase: document.getElementById('req-uppercase'),
                lowercase: document.getElementById('req-lowercase'),
                number: document.getElementById('req-number'),
                special: document.getElementById('req-special')
            };
            
            passwordInput.addEventListener('input', function() {
                const password = this.value;
                let strength = 0;
                
                // Vérification des exigences
                const hasLength = password.length >= 8;
                const hasUppercase = /[A-Z]/.test(password);
                const hasLowercase = /[a-z]/.test(password);
                const hasNumber = /[0-9]/.test(password);
                const hasSpecial = /[^A-Za-z0-9]/.test(password);
                
                // Mise à jour des indicateurs visuels
                updateRequirement(requirements.length, hasLength);
                updateRequirement(requirements.uppercase, hasUppercase);
                updateRequirement(requirements.lowercase, hasLowercase);
                updateRequirement(requirements.number, hasNumber);
                updateRequirement(requirements.special, hasSpecial);
                
                // Calcul de la force
                if (hasLength) strength += 20;
                if (hasUppercase) strength += 20;
                if (hasLowercase) strength += 20;
                if (hasNumber) strength += 20;
                if (hasSpecial) strength += 20;
                
                // Mise à jour de la barre de force
                strengthBar.style.width = strength + '%';
                
                // Couleur de la barre
                if (strength < 40) {
                    strengthBar.style.backgroundColor = '#dc3545';
                } else if (strength < 80) {
                    strengthBar.style.backgroundColor = '#ffc107';
                } else {
                    strengthBar.style.backgroundColor = '#28a745';
                }
                
                // Vérification de la correspondance
                checkPasswordMatch();
            });
            
            confirmPasswordInput.addEventListener('input', checkPasswordMatch);
            
            function updateRequirement(element, isValid) {
                if (isValid) {
                    element.classList.add('valid');
                } else {
                    element.classList.remove('valid');
                }
            }
            
            function checkPasswordMatch() {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                if (confirmPassword.length > 0 && password !== confirmPassword) {
                    confirmPasswordInput.classList.add('is-invalid');
                } else {
                    confirmPasswordInput.classList.remove('is-invalid');
                }
            }
            
            function togglePassword(id) {
                const input = document.getElementById(id);
                const icon = input.nextElementSibling.querySelector('i');
                
                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    input.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }
            }
            
            // Bouton loading
            const forms = document.querySelectorAll('form');
            forms.forEach(form => {
                form.addEventListener('submit', function(e) {
                    // Vérification de la correspondance des mots de passe
                    if (passwordInput.value !== confirmPasswordInput.value) {
                        e.preventDefault();
                        confirmPasswordInput.classList.add('is-invalid');
                        return;
                    }
                    
                    const btn = this.querySelector('button[type="submit"]');
                    const spinner = btn.querySelector('.spinner-border');
                    const text = btn.querySelector('.submit-text');
                    
                    btn.disabled = true;
                    text.classList.add('d-none');
                    spinner.classList.remove('d-none');
                });
            });
        });
    </script>
</body>
</html>